(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{100:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(2),o=n(6),i=(n(0),n(125)),r={id:"hw5",title:"Homework 5"},c={unversionedId:"assignments/hw5",id:"assignments/hw5",isDocsHomePage:!1,title:"Homework 5",description:"* You are expected to work individually.",source:"@site/docs/assignments/hw5.md",slug:"/assignments/hw5",permalink:"/cs220-sp21/docs/assignments/hw5",version:"current"},l=[{value:"Learning Objectives",id:"learning-objectives",children:[]},{value:"Overview",id:"overview",children:[]},{value:"Phone Database",id:"phone-database",children:[]},{value:"Input and Output",id:"input-and-output",children:[]},{value:"Commands",id:"commands",children:[{value:"<code>C</code> command",id:"c-command",children:[]},{value:"<code>D</code> command",id:"d-command",children:[]},{value:"<code>L</code> command",id:"l-command",children:[]},{value:"<code>P</code> command",id:"p-command",children:[]},{value:"<code>N</code> command",id:"n-command",children:[]},{value:"<code>X</code> command",id:"x-command",children:[]},{value:"<code>S</code> command",id:"s-command",children:[]},{value:"<code>R</code> command",id:"r-command",children:[]},{value:"<code>Q</code> command",id:"q-command",children:[]}]},{value:"Example Session",id:"example-session",children:[]},{value:"Hints",id:"hints",children:[]},{value:"Testing",id:"testing",children:[]},{value:"Files, Submitting",id:"files-submitting",children:[{value:"Provided files",id:"provided-files",children:[]},{value:"Gitlog",id:"gitlog",children:[]},{value:"README",id:"readme",children:[]}]},{value:"Compiling",id:"compiling",children:[]},{value:"Submission",id:"submission",children:[]}],b={rightToc:l};function s(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("ul",{parentName:"div"},Object(i.b)("li",{parentName:"ul"},"You are expected to work individually."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Due: Thursday ",Object(i.b)("strong",{parentName:"strong"},"April 1st")," at 11pm ET (Baltimore time).")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("em",{parentName:"li"},"This assignment is worth 60 points."))))),Object(i.b)("h2",{id:"learning-objectives"},"Learning Objectives"),Object(i.b)("div",{className:"admonition admonition-success alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Objectives")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"To practice with:"),Object(i.b)("ul",{parentName:"div"},Object(i.b)("li",{parentName:"ul"},"Input and output using iostreams (",Object(i.b)("inlineCode",{parentName:"li"},"cin")," and ",Object(i.b)("inlineCode",{parentName:"li"},"cout"),")"),Object(i.b)("li",{parentName:"ul"},"File input and output using ",Object(i.b)("inlineCode",{parentName:"li"},"ifstream")," and `ofstream"),Object(i.b)("li",{parentName:"ul"},"C++ ",Object(i.b)("inlineCode",{parentName:"li"},"string")),Object(i.b)("li",{parentName:"ul"},"Data representation using STL collections such as ",Object(i.b)("inlineCode",{parentName:"li"},"vector")," and ",Object(i.b)("inlineCode",{parentName:"li"},"map")),Object(i.b)("li",{parentName:"ul"},"Access and manipulation of STL collections using iterators")))),Object(i.b)("h2",{id:"overview"},"Overview"),Object(i.b)("p",null,"The goal for this assignment is to become familiar with basic I/O in\nC++, and to use built-in classes and algorithms from the STL to solve a\nproblem that would be difficult to code from scratch."),Object(i.b)("h2",{id:"phone-database"},"Phone Database"),Object(i.b)("p",null,"Your will write a program to keep track of an in-memory database of contact names\nand phone numbers.  The database should be structured as follows:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Each contact consists of a last name and a first name"),Object(i.b)("li",{parentName:"ul"},'Each contact can have up to 5 phone numbers, with types "HOME",\n"CELL", "WORK", "FAX", and "VOIP"; only one phone number of\neach type is allowed for a single contact')),Object(i.b)("p",null,"Last names and first names are nonempty sequences of non-whitespace characters."),Object(i.b)("p",null,'Phone numbers are sequences of digit (0\u20139) and hyphen ("-") characters,\nand must start and end with a digit.'),Object(i.b)("h2",{id:"input-and-output"},"Input and Output"),Object(i.b)("p",null,"The program will read data from ",Object(i.b)("inlineCode",{parentName:"p"},"cin")," and write data to ",Object(i.b)("inlineCode",{parentName:"p"},"cout"),"."),Object(i.b)("p",null,"There are three kinds of output from the program."),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Each kind of output must be printed as a complete line\nof output to ",Object(i.b)("inlineCode",{parentName:"p"},"cout"),", terminated by a newline/",Object(i.b)("inlineCode",{parentName:"p"},"endl"),", in exactly the forms\nspecified below."))),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Info messages"),' are messages that are helpful for the user, but which\naren\'t part of the "official" results of the program.  They have the\nform'),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"Info: message text\n")),Object(i.b)("p",null,"where ",Object(i.b)("inlineCode",{parentName:"p"},"message text")," can be any text.  You can use info messages for prompts\nand other information for the user."),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Result messages")," indicate the result of a command, and have the form"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"Result: message text\n")),Object(i.b)("p",null,"where ",Object(i.b)("inlineCode",{parentName:"p"},"message text")," is the exact text required for a particular command result\n(as described in the ",Object(i.b)("a",{parentName:"p",href:"#commands"},"Commands")," section below.)"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Error messages")," are messages indicating that an error has occurred. They have\nthe form"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"Error: message text\n")),Object(i.b)("p",null,"where ",Object(i.b)("inlineCode",{parentName:"p"},"message text")," is the exact text required for the error message (again,\nas described in the ",Object(i.b)("a",{parentName:"p",href:"#commands"},"Commands")," section.)  Note that error messages\nshould be printed to ",Object(i.b)("inlineCode",{parentName:"p"},"cout"),", not ",Object(i.b)("inlineCode",{parentName:"p"},"cerr"),"."),Object(i.b)("h2",{id:"commands"},"Commands"),Object(i.b)("p",null,"The program should support the following commands.  The user will\nenter each command as a single line of text.  There can be arbitrary\nhorizontal whitespace (e.g., space and tab characters) preceding or\nfollowing each token."),Object(i.b)("p",null,"Here is a summary of the commands and their forms:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Command"),Object(i.b)("th",{parentName:"tr",align:null},"Purpose"),Object(i.b)("th",{parentName:"tr",align:null},"Form"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"C")),Object(i.b)("td",{parentName:"tr",align:null},"Create a contact"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"C lastname firstname"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"D")),Object(i.b)("td",{parentName:"tr",align:null},"Delete a contact"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"D lastname firstname"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"L")),Object(i.b)("td",{parentName:"tr",align:null},"List contact names"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"L"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"P")),Object(i.b)("td",{parentName:"tr",align:null},"List phone numbers for a contact"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"P lastname firstname"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"N")),Object(i.b)("td",{parentName:"tr",align:null},"Add or replace phone number for a contact"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"N lastname firstname type phone_number"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"X")),Object(i.b)("td",{parentName:"tr",align:null},"Delete phone number for a contact"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"X lastname firstname type"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"S")),Object(i.b)("td",{parentName:"tr",align:null},"Save the database to a file"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"S filename"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"R")),Object(i.b)("td",{parentName:"tr",align:null},"Restore the database from a file"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"R filename"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"Q")),Object(i.b)("td",{parentName:"tr",align:null},"Quit the program"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"Q"))))),Object(i.b)("p",null,"For all commands with ",Object(i.b)("inlineCode",{parentName:"p"},"lastname")," and ",Object(i.b)("inlineCode",{parentName:"p"},"firstname")," values specifying\na contact name, searches are ",Object(i.b)("em",{parentName:"p"},"case-insensitive"),".  As an example, if a contact\nwith last name ",Object(i.b)("inlineCode",{parentName:"p"},"Granger")," and first name ",Object(i.b)("inlineCode",{parentName:"p"},"Hermione")," exists in the database,\nthen a ",Object(i.b)("inlineCode",{parentName:"p"},"P")," command specifying ",Object(i.b)("inlineCode",{parentName:"p"},"granger")," and ",Object(i.b)("inlineCode",{parentName:"p"},"HERMIONE")," as the last name\nand first name should match the existing contact, and print the phone\nnumbers for that contact."),Object(i.b)("p",null,"Note however that whenever a contact's last and first names are printed\nby the ",Object(i.b)("inlineCode",{parentName:"p"},"L")," command, the exact capitalization used in the original ",Object(i.b)("inlineCode",{parentName:"p"},"C")," command\nwhen creating the contact should be used.  One way to think about this is\nthat the contacts are stored in the database using an exact representation\nof upper and lower case for each letter in the last and first names,\nbut ",Object(i.b)("em",{parentName:"p"},"comparisons")," between contact names should be done in a case-insensitive\nmanner."),Object(i.b)("h3",{id:"c-command"},Object(i.b)("inlineCode",{parentName:"h3"},"C")," command"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"C")," command creates a contact."),Object(i.b)("p",null,"If successful, a result message with the text ",Object(i.b)("inlineCode",{parentName:"p"},"Contact created")," should be printed."),Object(i.b)("p",null,"If unsuccessful because a contact with the same last name and first name\nalready exists, an error message with the text ",Object(i.b)("inlineCode",{parentName:"p"},"Contact already exists"),"\nshould be printed."),Object(i.b)("h3",{id:"d-command"},Object(i.b)("inlineCode",{parentName:"h3"},"D")," command"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"D")," command deletes a contact."),Object(i.b)("p",null,"If successful, a result messasge with the text ",Object(i.b)("inlineCode",{parentName:"p"},"Contact deleted")," should be printed."),Object(i.b)("p",null,"If unsuccessful because no contact with the given last name and first name exists,\nan error message with the text ",Object(i.b)("inlineCode",{parentName:"p"},"Contact not found")," should be printed."),Object(i.b)("h3",{id:"l-command"},Object(i.b)("inlineCode",{parentName:"h3"},"L")," command"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"L")," command lists the last and first names of each contact.  The contacts\nshould printed in lexicographical order by last name, with comparison of\nfirst names breaking ties in the case where two contacts have the same last\nname.  All comparisons are case-insensitive.  Each contact name should be\nprinted as a separate result message, with message text of the form ",Object(i.b)("inlineCode",{parentName:"p"},"lastname,firstname"),"."),Object(i.b)("h3",{id:"p-command"},Object(i.b)("inlineCode",{parentName:"h3"},"P")," command"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"P")," command prints the phone numbers for a specific contact.  The phone\nnumbers are printed in alphabetical order by type, so (for example) the\n",Object(i.b)("inlineCode",{parentName:"p"},"CELL")," phone number should come before the ",Object(i.b)("inlineCode",{parentName:"p"},"HOME")," phone number.\nEach existing phone number should be printed as a separate result message, with\nmessage text of the form ",Object(i.b)("inlineCode",{parentName:"p"},"type,phone_number"),". (If no phone number is\nspecified for a specific type, that type should not be printed.)"),Object(i.b)("p",null,"If the contact is not found, an error message with the message text\n",Object(i.b)("inlineCode",{parentName:"p"},"Contact not found")," should be printed."),Object(i.b)("p",null,"Note that it is not an error if the contact exists, but there are no\nphone numbers for the contact. In this case there are no required\nresult messages to output, but you could print an info message."),Object(i.b)("h3",{id:"n-command"},Object(i.b)("inlineCode",{parentName:"h3"},"N")," command"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"N")," command adds or modifies a phone number for a contact."),Object(i.b)("p",null,"If the command successfully adds a new phone number (i.e., there was\nno prior phone number of the specified type for the contact), a result\nmessage with the text ",Object(i.b)("inlineCode",{parentName:"p"},"Phone number added")," should be printed."),Object(i.b)("p",null,"If the command successfully replaces a phone number (i.e., a phone\nnumber of the specified type already existed for the contact),\na result message with the text ",Object(i.b)("inlineCode",{parentName:"p"},"Phone number replaced")," should\nbe printed."),Object(i.b)("p",null,"If the contact is not found, an error message with the message text\n",Object(i.b)("inlineCode",{parentName:"p"},"Contact not found")," should be printed."),Object(i.b)("p",null,"If the phone number type is not valid, meaning that it is not one of\n",Object(i.b)("inlineCode",{parentName:"p"},"CELL"),", ",Object(i.b)("inlineCode",{parentName:"p"},"HOME"),", ",Object(i.b)("inlineCode",{parentName:"p"},"WORK"),", ",Object(i.b)("inlineCode",{parentName:"p"},"FAX"),", or ",Object(i.b)("inlineCode",{parentName:"p"},"VOIP"),", an error message with the\nmessage text ",Object(i.b)("inlineCode",{parentName:"p"},"Invalid phone number type")," should be printed."),Object(i.b)("p",null,"If the phone number is not valid, an error message with the message\ntext ",Object(i.b)("inlineCode",{parentName:"p"},"Not a valid phone number")," should be printed."),Object(i.b)("p",null,"(The possible error conditions should be checked and handled in the\norder specified above. Only one error message should be printed.)"),Object(i.b)("h3",{id:"x-command"},Object(i.b)("inlineCode",{parentName:"h3"},"X")," command"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"X")," command deletes a phone number for a contact."),Object(i.b)("p",null,"If the contact is not found, an error message with the message text\n",Object(i.b)("inlineCode",{parentName:"p"},"Contact not found")," should be printed."),Object(i.b)("p",null,"If the contact has no phone number of the specified type, an error message\nwith the message text ",Object(i.b)("inlineCode",{parentName:"p"},"No phone number of that type")," should be printed.\n(Note that the ",Object(i.b)("inlineCode",{parentName:"p"},"X")," command does ",Object(i.b)("em",{parentName:"p"},"not")," need to validate that the phone\nnumber type is valid, as the ",Object(i.b)("inlineCode",{parentName:"p"},"N")," command does.)"),Object(i.b)("p",null,"(The possible error conditions should be checked and handled in the\norder specified above. Only one error message should be printed.)"),Object(i.b)("h3",{id:"s-command"},Object(i.b)("inlineCode",{parentName:"h3"},"S")," command"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"S")," command saves all of the data currently in the phone database to\na named file."),Object(i.b)("p",null,"If the output file can't be opened, an error message with\nthe message text ",Object(i.b)("inlineCode",{parentName:"p"},"Could not open output file")," should be printed."),Object(i.b)("p",null,"Note that there is no specification for how data should be written.\nIt is up to you to determine a format that will allow the ",Object(i.b)("inlineCode",{parentName:"p"},"R")," command\nto successfully read back the saved data."),Object(i.b)("h3",{id:"r-command"},Object(i.b)("inlineCode",{parentName:"h3"},"R")," command"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"R")," command loads data from a file written using a previous ",Object(i.b)("inlineCode",{parentName:"p"},"S")," command\ninto the database, replacing whatever data is currently present."),Object(i.b)("p",null,"If the input file can't be opened, an error message with\nthe message text ",Object(i.b)("inlineCode",{parentName:"p"},"Could not open input file")," should be printed."),Object(i.b)("p",null,"If the input file can be opened, but the data in it is not valid,\nan error message with the message text ",Object(i.b)("inlineCode",{parentName:"p"},"Invalid database file")," should be printed.\nNote that if the input data is corrupted, the database contents in memory\nare allowed to be indeterminate.  (In other words, it is acceptable for\nthe ",Object(i.b)("inlineCode",{parentName:"p"},"R")," command to partially load data into memory.)"),Object(i.b)("h3",{id:"q-command"},Object(i.b)("inlineCode",{parentName:"h3"},"Q")," command"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"Q")," command causes the program to terminate."),Object(i.b)("h2",{id:"example-session"},"Example Session"),Object(i.b)("p",null,"Here is an example session of the program:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"Info: Welcome to the Phone Database!\nInfo: Please enter a command\nC Weasley Ron\nResult: Contact created\nInfo: Please enter a command\nC Granger Hermione\nResult: Contact created\nInfo: Please enter a command\nC Malfoy Draco\nResult: Contact created\nInfo: Please enter a command\nL\nResult: Granger,Hermione\nResult: Malfoy,Draco\nResult: Weasley,Ron\nInfo: There are 3 contact(s)\nInfo: Please enter a command\nN Granger Hermione CELL 401-555-1234\nResult: Phone number added\nInfo: Please enter a command\nN Weasley Ron WORK 61-491-570-156\nResult: Phone number added\nInfo: Please enter a command\nN Granger Hermione VOIP 301-555-8765\nResult: Phone number added\nInfo: Please enter a command\nP Granger Hermione\nResult: CELL,401-555-1234\nResult: VOIP,301-555-8765\nInfo: Found 2 phone number(s) for this contact\nInfo: Please enter a command\nP Weasley Ron\nResult: WORK,61-491-570-156\nInfo: Found 1 phone number(s) for this contact\nInfo: Please enter a command\nP Malfoy Draco \nInfo: There are no phone numbers for this contact\nInfo: Please enter a command\nD Malfoy Draco\nResult: Contact deleted\nInfo: Please enter a command\nL\nResult: Granger,Hermione\nResult: Weasley,Ron\nInfo: There are 2 contact(s)\nInfo: Please enter a command\nX Granger Hermione VOIP \nResult: Phone number deleted\nInfo: Please enter a command\nP Granger Hermione\nResult: CELL,401-555-1234\nInfo: Please enter a command\nP Longbottom Neville\nError: Contact not found\nInfo: Please enter a command\nQ\nInfo: Thank you for using the Phone Database!\n")),Object(i.b)("h2",{id:"hints"},"Hints"),Object(i.b)("p",null,"The first thing you will need to think about is how to use STL containers\nto represent the data in the phone database.  The ",Object(i.b)("inlineCode",{parentName:"p"},"map")," container type\nshould be very useful.  For example, if ",Object(i.b)("inlineCode",{parentName:"p"},"Name")," represents a contact\nname (last name and first name), and ",Object(i.b)("inlineCode",{parentName:"p"},"PhoneNumberCollection")," represents a\ncollection of phone numbers for a contact, then the variable declaration"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"map<Name, PhoneNumberCollection> phone_db;\n")),Object(i.b)("p",null,"could be a good representation for the entire phone database."),Object(i.b)("p",null,"Note that in order to allow searches to be case-insensitive, you will\nneed to have a way of ordering the keys in this map that ignores case\ndistinctions.  I.e., we want the contacts ",Object(i.b)("inlineCode",{parentName:"p"},"Granger,Hermione")," and ",Object(i.b)("inlineCode",{parentName:"p"},"granger,HERMIONE"),"\nto be considered the same when searching, and we want ",Object(i.b)("inlineCode",{parentName:"p"},"Granger,Hermione"),'\nto be considered "less than" ',Object(i.b)("inlineCode",{parentName:"p"},"longbottom,Neville"),", even though the\ncharacter code for ",Object(i.b)("inlineCode",{parentName:"p"},"l")," is greater than the character code for ",Object(i.b)("inlineCode",{parentName:"p"},"G"),".\nTo allow this, we will need the map to use an appropriate ordering function\nfor the map keys (in this case, the keys belong to the ",Object(i.b)("inlineCode",{parentName:"p"},"Name")," data type.)\nThe default ordering function for keys in ",Object(i.b)("inlineCode",{parentName:"p"},"map"),"s is\n",Object(i.b)("a",{parentName:"p",href:"https://en.cppreference.com/w/cpp/utility/functional/less"},Object(i.b)("inlineCode",{parentName:"a"},"std::less")),",\nwhich in turn is based on ordering values according to the ",Object(i.b)("inlineCode",{parentName:"p"},"<")," (less than) operator.\nSo, one way to ensure that contact names are ordered correctly is to override the ",Object(i.b)("inlineCode",{parentName:"p"},"<"),"\noperator.  This would look something like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"bool operator<(const Name &left, const Name &right) {\n  // return true if left<right, false otherwise,\n  // ignoring case\n}\n")),Object(i.b)("p",null,"As long as this function exists, is defined correctly, and its declaration\npreceeds any use of the ",Object(i.b)("inlineCode",{parentName:"p"},"Name")," type as the key type in a ",Object(i.b)("inlineCode",{parentName:"p"},"map")," instance,\nthen the contact names should be ordered correctly."),Object(i.b)("p",null,"Note that the ",Object(i.b)("inlineCode",{parentName:"p"},"Name")," and ",Object(i.b)("inlineCode",{parentName:"p"},"PhoneNumberCollection")," data types don't necessarily\nneed to be ",Object(i.b)("inlineCode",{parentName:"p"},"struct")," or ",Object(i.b)("inlineCode",{parentName:"p"},"class")," types that you define.  They could also\nbe ",Object(i.b)("inlineCode",{parentName:"p"},"typedef"),"s for STL data types.  For example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"// Note: probably not a great way to represent phone numbers for\n// a contact\ntypedef vector<string> PhoneNumberCollection;\n")),Object(i.b)("p",null,"This ",Object(i.b)("inlineCode",{parentName:"p"},"typedef")," would make ",Object(i.b)("inlineCode",{parentName:"p"},"PhoneNumberCollection")," an alias for ",Object(i.b)("inlineCode",{parentName:"p"},"vector<string>"),".\nEven though ",Object(i.b)("inlineCode",{parentName:"p"},"vector<string>")," is not a great way to represent the collection of\nphone numbers for a contact, it's likely that you can use STL data types\nto achieve a better representation."),Object(i.b)("p",null,"When writing the database to a file in the ",Object(i.b)("inlineCode",{parentName:"p"},"S")," command, you will need to think\nabout how to write the data so that it can be easily read back in by the ",Object(i.b)("inlineCode",{parentName:"p"},"R"),"\ncommand.  One useful technique to use when writing a collection of data\nis to first write the number of items in the collection, and then write each\nindividual item.  That way, the code that reads the data will know exactly\nhow many items should be read back in."),Object(i.b)("h2",{id:"testing"},"Testing"),Object(i.b)("p",null,"A good way to test the program is to prepare an input file with commands\nto send to the program, and an expected output file containing the\nresult and error messages expected to be produced.  (The expected output\nfile shouldn't contain the info messages, since producing them is optional,\nand their content isn't specified.)"),Object(i.b)("p",null,"Example input and expected output files called ",Object(i.b)("inlineCode",{parentName:"p"},"input1.txt")," and\n",Object(i.b)("inlineCode",{parentName:"p"},"expected_output1.txt")," are provided with the starter files.  Here is how\nyou can use them to test your program:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'make phone_db\n(./phone_db < input1.txt) | egrep -v "^Info:" > actual1.txt\ndiff expected_output1.txt actual1.txt\necho $?\n')),Object(i.b)("p",null,"If the ",Object(i.b)("inlineCode",{parentName:"p"},"diff")," command produces no output, and the ",Object(i.b)("inlineCode",{parentName:"p"},"echo $?")," command results in\nthe output ",Object(i.b)("inlineCode",{parentName:"p"},"0"),", then your program's output matched the expected output."),Object(i.b)("h2",{id:"files-submitting"},"Files, Submitting"),Object(i.b)("h3",{id:"provided-files"},"Provided files"),Object(i.b)("p",null,"Start with the template Makefile, source files, and header file in the public repo:\n",Object(i.b)("inlineCode",{parentName:"p"},"cs220-sp21-public/homework/hw5/"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The Makefile is very minimal, building an executable called ",Object(i.b)("inlineCode",{parentName:"p"},"phone_db"),"\nfrom a source file called ",Object(i.b)("inlineCode",{parentName:"p"},"phone_db.cpp"),". This might be sufficient, but if\nyou would like to use additional source and/or header files,\nyou will need to modify the Makefile accordingly")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The initial ",Object(i.b)("inlineCode",{parentName:"p"},"phone_db.cpp")," is ",Object(i.b)("em",{parentName:"p"},"very")," minimal, consisting of just a ",Object(i.b)("inlineCode",{parentName:"p"},"main")," function"))),Object(i.b)("h3",{id:"gitlog"},"Gitlog"),Object(i.b)("p",null,"You must include with your submission a copy of the output of ",Object(i.b)("inlineCode",{parentName:"p"},"git log"),"\nshowing at least five commits to the repository. Save the ",Object(i.b)("inlineCode",{parentName:"p"},"git log")," output\ninto a file called ",Object(i.b)("inlineCode",{parentName:"p"},"gitlog.txt")," (e.g. by doing ",Object(i.b)("inlineCode",{parentName:"p"},"git log > gitlog.txt)"),"."),Object(i.b)("h3",{id:"readme"},"README"),Object(i.b)("p",null,"Please submit a file called ",Object(i.b)("inlineCode",{parentName:"p"},"README")," (not ",Object(i.b)("inlineCode",{parentName:"p"},"README.txt")," or ",Object(i.b)("inlineCode",{parentName:"p"},"README.md"),",\netc -- just ",Object(i.b)("inlineCode",{parentName:"p"},"README"),") including information about what design choices you\nmade and anything the graders should know about your submission. In your\n",Object(i.b)("inlineCode",{parentName:"p"},"README")," you should:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Write your name and JHED ID at the top of the file."),Object(i.b)("li",{parentName:"ul"},"Briefly justify the structure of your program; why you defined the functions you did, etc."),Object(i.b)("li",{parentName:"ul"},"If applicable: Highlight anything you did that was particularly clever."),Object(i.b)("li",{parentName:"ul"},"If applicable: Tell the graders if you couldn\u2019t do everything. Where\ndid you stop? What did you get stuck on? What are the parts you already\nknow do not work according to the requirements?")),Object(i.b)("h2",{id:"compiling"},"Compiling"),Object(i.b)("p",null,"Your code should compile with no errors or warnings with the typical\ncommand: ",Object(i.b)("inlineCode",{parentName:"p"},"g++ <source> -Wall -Wextra -std=c++-11 -pedantic"),".\n(These are the options included in the provided ",Object(i.b)("inlineCode",{parentName:"p"},"Makefile"),".)"),Object(i.b)("h2",{id:"submission"},"Submission"),Object(i.b)("p",null,"Create a ",Object(i.b)("inlineCode",{parentName:"p"},".zip")," file named ",Object(i.b)("inlineCode",{parentName:"p"},"hw5.zip")," containing:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"All ",Object(i.b)("inlineCode",{parentName:"li"},".cpp")," files"),Object(i.b)("li",{parentName:"ul"},"All ",Object(i.b)("inlineCode",{parentName:"li"},".h")," files (if any)"),Object(i.b)("li",{parentName:"ul"},"README"),Object(i.b)("li",{parentName:"ul"},"Makefile"),Object(i.b)("li",{parentName:"ul"},"gitlog.txt")),Object(i.b)("p",null,"Copy ",Object(i.b)("inlineCode",{parentName:"p"},"hw5.zip")," file to your local machine (using ",Object(i.b)("inlineCode",{parentName:"p"},"scp")," or ",Object(i.b)("inlineCode",{parentName:"p"},"pscp"),"),\nand submit it as ",Object(i.b)("strong",{parentName:"p"},"Homework 5")," on Gradescope. When you submit, gradescope\nconducts a series of automatic tests. These do basic checks, e.g. to\ncheck that you submitted the right files. If you see error messages (in\nred), address them and resubmit. You may re-submit any number of times\nprior to the deadline; only your latest submission will be graded. Review\nthe course syllabus for late submission policies (grace period and late\ndays), and remember that ",Object(i.b)("strong",{parentName:"p"},"if your final submitted code does not compile,\nyou will likely earn a zero score for the assignment.")),Object(i.b)("div",{className:"admonition admonition-danger alert alert--danger"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Remember that if your final submitted code does not compile, you will earn a zero score for the assignment."))),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Two notes regarding automatic checks for programming assignments:"),Object(i.b)("ul",{parentName:"div"},Object(i.b)("li",{parentName:"ul"},"Passing an automatic check is not itself worth points. (There might be\na nominal, low point value like 0.01 associated with a check, but that\nwon\u2019t count in the end.) The checks exist to help you and the graders\nfind obvious errors."),Object(i.b)("li",{parentName:"ul"},"The automatic checks cover some of the requirements set out in the\nassignment, but not all. It is up to you to test your own work and ensure\nyour programs satisfy all stated requirements. Passing all the automatic\nchecks does not mean you have earned all the points.")))))}s.isMDXComponent=!0},125:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return u}));var a=n(0),o=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var b=o.a.createContext({}),s=function(e){var t=o.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=s(e.components);return o.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},p=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),d=s(n),p=a,u=d["".concat(r,".").concat(p)]||d[p]||m[p]||i;return n?o.a.createElement(u,c(c({ref:t},b),{},{components:n})):o.a.createElement(u,c({ref:t},b))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,r[1]=c;for(var b=2;b<i;b++)r[b]=n[b];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);